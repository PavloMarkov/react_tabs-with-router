{"version":3,"sources":["components/HeaderLink.tsx","components/HeaderNavLinks.tsx","components/HomePage.tsx","components/Tabs.tsx","components/TabsPage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HeaderLink","to","linkName","className","isActive","classNames","HeaderNavLinks","HomePage","Tabs","tabId","tabs","id","title","content","innerContent","find","tab","map","TabsPage","useParams","NotFoundPage","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAAwB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC1C,OACE,qBAAKC,UAAU,eAAf,SACE,cAAC,IAAD,CACEF,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,SAMGF,OChBII,EAAiB,WAC5B,OACE,qBAEEH,UAAU,yEACV,UAAQ,MAHV,SAKE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAYF,GAAG,IAAIC,SAAS,SAC5B,cAAC,EAAD,CAAYD,GAAG,QAAQC,SAAS,iBCZ7BK,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,wBCKWK,EAAwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChCC,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAGpCC,EAAeJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIL,KAAOF,KAEjD,OACE,qCACE,qBAAKN,UAAU,gBAAf,SACE,6BACGO,EAAKO,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MACRb,UAAWa,EAAIL,KAAOF,EAAQ,YAAc,GAF9C,SAKE,cAAC,IAAD,CACER,GAAE,aAAQe,EAAIL,IADhB,SAGGK,EAAIJ,SALFI,EAAIL,WAWjB,qBAAKR,UAAU,QAAQ,UAAQ,cAA/B,SACGW,EAAeA,EAAaD,QAAU,4BChClCK,EAAW,WACtB,MAAuBC,cAAfV,aAAR,MAAgB,GAAhB,EAEA,OACE,qCACE,oBAAIN,UAAU,QAAd,uBACA,cAAC,EAAD,CAAMM,MAAOA,QCTNW,EAAe,kBAAO,oBAAIjB,UAAU,QAAd,6BC6BpBkB,EApBH,kBACV,qCACE,cAAC,EAAD,IAEA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBClBnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc91d522.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  linkName: string;\n};\n\nexport const HeaderLink: FC<Props> = ({ to, linkName }) => {\n  return (\n    <div className=\"navbar-brand\">\n      <NavLink\n        to={to}\n        className={({ isActive }) => classNames(\n          'navbar-item', { 'is-active': isActive },\n        )}\n      >\n        {linkName}\n      </NavLink>\n    </div>\n  );\n};\n","import { HeaderLink } from './HeaderLink';\n\nexport const HeaderNavLinks = () => {\n  return (\n    <nav\n      // eslint-disable-next-line max-len\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow has-navbar-fixed-top\"\n      data-cy=\"nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <HeaderLink to=\"/\" linkName=\"Home\" />\n          <HeaderLink to=\"/tabs\" linkName=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { Link } from 'react-router-dom';\n\ntype Props = {\n  tabId: string;\n};\n\nexport const Tabs: React.FC<Props> = ({ tabId }) => {\n  const tabs = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  const innerContent = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"tab\"\n              className={tab.id === tabId ? 'is-active' : ''}\n              key={tab.id}\n            >\n              <Link\n                to={`../${tab.id}`}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"tab-content\">\n        {innerContent ? innerContent.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from './Tabs';\n\nexport const TabsPage = () => {\n  const { tabId = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs tabId={tabId} />\n    </>\n  );\n};\n","export const NotFoundPage = () => (<h1 className=\"title\">Page not found</h1>);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HeaderNavLinks } from './components/HeaderNavLinks';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <>\n    <HeaderNavLinks />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}